openapi: 3.0.0
info:
    description: 환전 프로젝트에 REST API 모음 입니다
    version: 1.0.0
    title: Exchange Project
servers:
    - url: "http://localhost:5000"
tags:
    - name: UserRouter
      description: 유저 라우터에 관한 Api 모음 입니다

paths:
    /login:
        post:
            tags:
                - UserRouter
            summary: 로그인을 담당하는 api입니다
            description: email과 password를 form에서 정보로 전달을 받습니다 그리고 전달 받은 email로 현재 user가 있는지 확인을 합니다 성공 하였다면 그 다음 password를 해시화 해줍니다  그리고 token,email,verified을 반환 합니다
            operationId: signup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserRegistration"
                required: true
            responses:
                "201":
                    description: Accepted
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthApiResponse"
                "401":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorBadRequestApiResponse"

                # "409":
                #     description: User already exists
                #     content:
                #         application/json:
                #             schema:
                #                 $ref: "#/components/schemas/ErrorApiResponse"

    /tweets:
        get:
            tags:
                - tweets
            summary: Get all tweets optionally filtered by author
            description: >
                Fetches a list of tweets. If username is provided, the list contains
                only tweets by the given user.
            operationId: getTweets
            parameters:
                - name: username
                  in: query
                  description: Username value to filter the results
                  schema:
                      type: string
            responses:
                "200":
                    description: Succeeded
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TweetsApiResponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorApiResponse"
            security:
                - jwt_auth: []

components:
    schemas:
        UserRegistration:
            type: object
            title: User registration details
            properties:
                email:
                    type: string
                password:
                    type: string
                    minLength: 5
            required:
                - email
                - password
            example:
                email: jeongbin@naver.com
                password: password
        Tweet:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                text:
                    type: string
                    minLength: 3
                createdAt:
                    type: string
                    format: date-time
                    description: Creation date
                    example: "2021-01-30T08:30:20.000Z"
                username:
                    type: string
                name:
                    type: string
                userId:
                    type: integer
                    format: int64
                url:
                    oneOf:
                        - type: string
                          format: url
                        - type: string
                          maxLength: 0
                    nullable: true
            required:
                - id
                - text
                - createdAt
                - username
                - name
                - userId
                - url
            example:
                id: 42
                text: Best tweet ever
                createdAt: "2021-01-30T08:30:20.000Z"
                userId: 1
                name: John Doe
                username: johndoe
                url: null

        AuthApiResponse:
            type: object
            properties:
                token:
                    type: string
                email:
                    type: string
                verified:
                    type: boolean
            required:
                - token
                - email
                - verified
            example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                email: jeongbin@naver.com
                verified: false

        ErrorApiResponse:
            type: object
            properties:
                message:
                    type: string
            required:
                - message
            example:
                message: "해당 이메일이 존재 합니다"

        ErrorBadRequestApiResponse:
            type: object
            properties:
                message:
                    type: string
            required:
                - message
            example:
                message: "이메일이나 비밀번호가 틀렸습니다"

        TweetsApiResponse:
            type: array
            items:
                $ref: "#/components/schemas/Tweet"

    securitySchemes:
        jwt_auth:
            description: Bearer token authorization with JWT
            type: http
            scheme: bearer
            bearerFormat: JWT
